"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8367],{1877:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Datasource Type/Response","title":"Response","description":"This section explains how to handle API responses and apply filters to the data before it\'s used.","source":"@site/docs/Datasource Type/Response.md","sourceDirName":"Datasource Type","slug":"/Datasource Type/Response","permalink":"/Apps4xDocs-Docusaurus/docs/Datasource Type/Response","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Datasource Type/Response.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Transform","permalink":"/Apps4xDocs-Docusaurus/docs/Datasource Type/Transform"},"next":{"title":"Condition Operators","permalink":"/Apps4xDocs-Docusaurus/docs/Datasource Type/Condition Operators"}}');var t=n(4848),i=n(8453);const o={sidebar_position:3},l="Response",a={},c=[{value:"Success Format:",id:"success-format",level:2},{value:"Response Data Filter",id:"response-data-filter",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"response",children:"Response"})}),"\n",(0,t.jsx)(s.p,{children:"This section explains how to handle API responses and apply filters to the data before it's used."}),"\n",(0,t.jsx)(s.h2,{id:"success-format",children:"Success Format:"}),"\n",(0,t.jsx)(s.p,{children:"This is how Apps4x determines whether an API call was successful or not :"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"You provide a condition (for example, checking if a certain value exists or is true)."}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["If the ",(0,t.jsx)(s.strong,{children:"condition is truthy (i.e., it returns true)"}),", then :"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["The API call is ",(0,t.jsx)(s.strong,{children:"treated as a success"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"The given success message will be shown."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["If the ",(0,t.jsx)(s.strong,{children:"condition is falsy (i.e., it returns false)"}),", then:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["The API call is ",(0,t.jsx)(s.strong,{children:"treated as a failure"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"The given error message will be shown instead."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"response-data-filter",children:"Response Data Filter"}),"\n",(0,t.jsx)(s.p,{children:"You can filter the data returned from an API using a condition format. Here's how it works:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.strong,{children:"Condition Format:"})}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"{{fieldName}}@@Operator@@value"})}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"{{age}}@@Equals@@20"})}),"\n",(0,t.jsxs)(s.p,{children:["\u2192 This will filter the data to only include records where the ",(0,t.jsx)(s.code,{children:"age"})," field is equal to ",(0,t.jsx)(s.code,{children:"20"}),". All other records will be removed."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Use ",(0,t.jsx)(s.code,{children:"@@"})," as the separator between parts of the condition:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"{{fieldName}}"})," = the name of the field in the data"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"Operator"})," = the comparison operator (like Equals, NotEquals, GreaterThan, etc.)"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"value"})," = the value you want to compare against."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Need help with operators ?"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"You can refer to the list of available operators here."})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var r=n(6540);const t={},i=r.createContext(t);function o(e){const s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);