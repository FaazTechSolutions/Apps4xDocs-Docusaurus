"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[678],{6212:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Forms/Tree Grid","title":"Tree Grid","description":"The Tree Grid form in Apps4x lets you display data in a hierarchical (parent-child) structure. It\u2019s useful when you need to group records under a parent row\u2014like showing employees grouped by manager.","source":"@site/docs/Forms/Tree Grid.md","sourceDirName":"Forms","slug":"/Forms/Tree Grid","permalink":"/Apps4xDocs-Docusaurus/docs/Forms/Tree Grid","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Forms/Tree Grid.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Report","permalink":"/Apps4xDocs-Docusaurus/docs/Forms/Report"},"next":{"title":"Chat","permalink":"/Apps4xDocs-Docusaurus/docs/Forms/Chat"}}');var t=s(4848),i=s(8453);const o={sidebar_position:8},a="Tree Grid",l={},d=[{value:"Key Features",id:"key-features",level:2},{value:"Example Use Case",id:"example-use-case",level:2}];function c(e){const r={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"tree-grid",children:"Tree Grid"})}),"\n",(0,t.jsx)(r.p,{children:"The Tree Grid form in Apps4x lets you display data in a hierarchical (parent-child) structure. It\u2019s useful when you need to group records under a parent row\u2014like showing employees grouped by manager."}),"\n",(0,t.jsx)(r.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Shows records in a tree-style view with expandable/collapsible rows."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Groups data based on parent-child relationships."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"example-use-case",children:"Example Use Case"}),"\n",(0,t.jsx)(r.p,{children:"If you have a table with:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"EmployeeId"}),"\n",(0,t.jsx)(r.li,{children:"ParentId (manager or reporting person)"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"The Tree Grid will group employees under their respective managers automatically."})]})}function u(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>a});var n=s(6540);const t={},i=n.createContext(t);function o(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);