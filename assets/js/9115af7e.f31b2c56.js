"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[814],{7169:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>a,frontMatter:()=>d,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"Apps/Fields","title":"Fields","description":"Fields play a crucial role in your application\u2014they define how data is captured, displayed, and stored. Once created, fields can be reused across your forms, entities, and collections as data blueprints.","source":"@site/docs/Apps/Fields.md","sourceDirName":"Apps","slug":"/Apps/Fields","permalink":"/Apps4xDocs-Docusaurus/docs/Apps/Fields","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Apps/Fields.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Entity","permalink":"/Apps4xDocs-Docusaurus/docs/Apps/Entity"},"next":{"title":"Introduction","permalink":"/Apps4xDocs-Docusaurus/docs/Introduction"}}');var s=i(4848),r=i(8453);const d={sidebar_position:4},t="Fields",c={},o=[{value:"How to Create Fields ?",id:"how-to-create-fields-",level:2},{value:"Field Properties &amp; Configuration",id:"field-properties--configuration",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"fields",children:"Fields"})}),"\n",(0,s.jsx)(n.p,{children:"Fields play a crucial role in your application\u2014they define how data is captured, displayed, and stored. Once created, fields can be reused across your forms, entities, and collections as data blueprints."}),"\n",(0,s.jsx)(n.h2,{id:"how-to-create-fields-",children:"How to Create Fields ?"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"1. Access the Entity"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Open your app in Apps4x Studio."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Navigate to the Entity where you want to add fields."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"2. Use the Field Creation Options"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"If fields were already created during Collection setup, they will be stored as Base Fields."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"To create new fields:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.code,{children:"+ Create"})," to add a base field."]}),"\n",(0,s.jsxs)(n.li,{children:["Or, click ",(0,s.jsx)(n.code,{children:"Create +"})," at the top of the field list to define new fields manually."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"field-properties--configuration",children:"Field Properties & Configuration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When creating a field, you'll be prompted to fill out the following attributes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Label"}),"\n",(0,s.jsx)(n.li,{children:"Name"}),"\n",(0,s.jsx)(n.li,{children:"Data Type"}),"\n",(0,s.jsx)(n.li,{children:"Order Id"}),"\n",(0,s.jsx)(n.li,{children:"Ready only"}),"\n",(0,s.jsx)(n.li,{children:"Hide"}),"\n",(0,s.jsx)(n.li,{children:"Mandatory"}),"\n",(0,s.jsx)(n.li,{children:"Unique"}),"\n",(0,s.jsx)(n.li,{children:"Sequence"}),"\n",(0,s.jsx)(n.li,{children:"Client Field"}),"\n",(0,s.jsx)(n.li,{children:"Computed Field"}),"\n",(0,s.jsx)(n.li,{children:"Json Field"}),"\n",(0,s.jsx)(n.li,{children:"Default Value"}),"\n",(0,s.jsx)(n.li,{children:"Min - Max Length"}),"\n",(0,s.jsx)(n.li,{children:"Pattern"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Label"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Display name for the field shown in forms and UI."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Name"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Internal name used as a column in the database."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Data Type"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Specifies the kind of data the field holds. (See Data Types below)"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Datatype types are,"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"String"}),"\n",(0,s.jsx)(n.li,{children:"Integer"}),"\n",(0,s.jsx)(n.li,{children:"Date"}),"\n",(0,s.jsx)(n.li,{children:"Date Time"}),"\n",(0,s.jsx)(n.li,{children:"Decimal"}),"\n",(0,s.jsx)(n.li,{children:"TimeSpan"}),"\n",(0,s.jsx)(n.li,{children:"Image"}),"\n",(0,s.jsx)(n.li,{children:"Dropdown"}),"\n",(0,s.jsx)(n.li,{children:"Relation"}),"\n",(0,s.jsx)(n.li,{children:"Boolean"}),"\n",(0,s.jsx)(n.li,{children:"Text Area"}),"\n",(0,s.jsx)(n.li,{children:"DB Computed"}),"\n",(0,s.jsx)(n.li,{children:"Formula"}),"\n",(0,s.jsx)(n.li,{children:"File"}),"\n",(0,s.jsx)(n.li,{children:"Time"}),"\n",(0,s.jsx)(n.li,{children:"QR Code"}),"\n",(0,s.jsx)(n.li,{children:"List"}),"\n",(0,s.jsx)(n.li,{children:"HTML Editor"}),"\n",(0,s.jsx)(n.li,{children:"Button"}),"\n",(0,s.jsx)(n.li,{children:"Icon"}),"\n",(0,s.jsx)(n.li,{children:"Password"}),"\n",(0,s.jsx)(n.li,{children:"Int64"}),"\n",(0,s.jsx)(n.li,{children:"Chips"}),"\n",(0,s.jsx)(n.li,{children:"Image Slider"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Order Id"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Determines the position/order of the field in lists."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Readonly"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If enabled, field cannot be edited in forms."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Hide"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If enabled, field will be hidden in the UI."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Mandatory"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Marks the field as required; cannot be left blank."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Unique"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Prevents duplicate values; ensures field uniqueness."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Sequence"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Converts the field into a sequential ID (requires prefix and pattern)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Sequence Pattern"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Custom formatting for sequence values (special characters, prefixes, etc.)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Client Field"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Creates the field only at the client/UI level (not stored in DB)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Computed Field"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Value is derived from logic (not stored in DB); calculated at runtime."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Json Field"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stores value in JSON format."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Default Value"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Predefined value auto-filled in forms unless changed."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Min-Max Length"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sets the allowed range of characters or digits."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pattern"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Regex validation for input formatting. Patterns should be defined in the master table."}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>t});var l=i(6540);const s={},r=l.createContext(s);function d(e){const n=l.useContext(r);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);