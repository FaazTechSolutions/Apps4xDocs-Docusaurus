"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1491],{5400:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Datasource Type/Condition Operators","title":"Condition Operators","description":"Condition operators are used to filter API response data based on specific rules. Below is a list of supported operators and how to use them.","source":"@site/docs/Datasource Type/Condition Operators.md","sourceDirName":"Datasource Type","slug":"/Datasource Type/Condition Operators","permalink":"/Apps4xDocs-Docusaurus/docs/Datasource Type/Condition Operators","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Datasource Type/Condition Operators.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Response","permalink":"/Apps4xDocs-Docusaurus/docs/Datasource Type/Response"},"next":{"title":"Introduction","permalink":"/Apps4xDocs-Docusaurus/docs/category/introduction"}}');var t=r(4848),i=r(8453);const d={sidebar_position:4},o="Condition Operators",l={},c=[{value:"Old Operators (No Longer in Use)",id:"old-operators-no-longer-in-use",level:2},{value:"New Operators (Recommended)",id:"new-operators-recommended",level:2},{value:"Boolean Operators",id:"boolean-operators",level:2},{value:"How to Write a Condition",id:"how-to-write-a-condition",level:2}];function a(e){const s={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"condition-operators",children:"Condition Operators"})}),"\n",(0,t.jsx)(s.p,{children:"Condition operators are used to filter API response data based on specific rules. Below is a list of supported operators and how to use them."}),"\n",(0,t.jsx)(s.h2,{id:"old-operators-no-longer-in-use",children:"Old Operators (No Longer in Use)"}),"\n",(0,t.jsx)(s.p,{children:"These operators have been deprecated and should not be used:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Equals"}),"\n",(0,t.jsx)(s.li,{children:"NotEquals"}),"\n",(0,t.jsx)(s.li,{children:"LessThan"}),"\n",(0,t.jsx)(s.li,{children:"LessThanOrEqual"}),"\n",(0,t.jsx)(s.li,{children:"GreaterThan"}),"\n",(0,t.jsx)(s.li,{children:"GreaterThanOrEqual"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"new-operators-recommended",children:"New Operators (Recommended)"}),"\n",(0,t.jsx)(s.p,{children:"These are the currently supported operators in Apps4x:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Operator"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IsNull"})}),(0,t.jsx)(s.td,{children:"Returns true if the field has a null value"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IsNotNull"})}),(0,t.jsxs)(s.td,{children:["Returns true if the field is ",(0,t.jsx)(s.strong,{children:"not"})," null"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IsEmpty"})}),(0,t.jsx)(s.td,{children:"Returns true if the field is an empty string or list"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IsNotEmpty"})}),(0,t.jsxs)(s.td,{children:["Returns true if the field is ",(0,t.jsx)(s.strong,{children:"not"})," empty"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Length"})}),(0,t.jsxs)(s.td,{children:["Compares the ",(0,t.jsx)(s.strong,{children:"length"})," of the value (string or list)"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Contains"})}),(0,t.jsxs)(s.td,{children:["Returns true if the field ",(0,t.jsx)(s.strong,{children:"contains"})," a specific value"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"NotContains"})}),(0,t.jsxs)(s.td,{children:["Returns true if the field ",(0,t.jsx)(s.strong,{children:"does not contain"})," a specific value"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"StartsWith"})}),(0,t.jsxs)(s.td,{children:["Returns true if the value ",(0,t.jsx)(s.strong,{children:"starts with"})," a given string"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"EndsWith"})}),(0,t.jsxs)(s.td,{children:["Returns true if the value ",(0,t.jsx)(s.strong,{children:"ends with"})," a given string"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Equal"})}),(0,t.jsx)(s.td,{children:"Returns true if the value is exactly equal"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"NotEqual"})}),(0,t.jsx)(s.td,{children:"Returns true if the value is not equal"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"LessThen"})}),(0,t.jsxs)(s.td,{children:["Returns true if the value is less than the given number ",(0,t.jsx)(s.em,{children:'(note typo: should be "LessThan")'})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"LessThenEqual"})}),(0,t.jsxs)(s.td,{children:["Returns true if value is less than or equal ",(0,t.jsx)(s.em,{children:'(should be "LessThanOrEqual")'})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"GreaterThen"})}),(0,t.jsxs)(s.td,{children:["Returns true if value is greater than ",(0,t.jsx)(s.em,{children:'(should be "GreaterThan")'})]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"GreaterThenEqual"})}),(0,t.jsxs)(s.td,{children:["Returns true if value is greater than or equal ",(0,t.jsx)(s.em,{children:'(should be "GreaterThanOrEqual")'})]})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"boolean-operators",children:"Boolean Operators"}),"\n",(0,t.jsx)(s.p,{children:"You can also check for true/false values using special boolean operators:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"1"})," \u2192 Checks if the value is true"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsxs)(s.p,{children:["If ",(0,t.jsx)(s.code,{children:"value = 'true'"}),",\r\n",(0,t.jsx)(s.code,{children:"{{value}}@@1@@true"})," \u2192 returns true"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"0"})," \u2192 Checks if the value is false"]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Example:"}),"\n",(0,t.jsxs)(s.p,{children:["If ",(0,t.jsx)(s.code,{children:"value = 'true'"}),",\r\n",(0,t.jsx)(s.code,{children:"{{value}}@@0@@true"})," \u2192 returns false"]}),"\n",(0,t.jsx)(s.h2,{id:"how-to-write-a-condition",children:"How to Write a Condition"}),"\n",(0,t.jsx)(s.p,{children:"Use this format:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"{{fieldName}}@@Operator@@value"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example :"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"{{age}}@@Equal@@30"})}),"\n",(0,t.jsx)(s.p,{children:"\u2192 This filters the data to only include records where the age is 30."})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>d,x:()=>o});var n=r(6540);const t={},i=n.createContext(t);function d(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);